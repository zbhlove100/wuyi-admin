package wuyi.model.po;

// Generated May 5, 2015 9:16:55 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Customer generated by hbm2java
 */
@Entity
@Table(name = "customer", catalog = "wuyitech")
public class Customer implements java.io.Serializable {

	private Long id;
	private CustomerLevel customerLevel;
	private LivingArea livingArea;
	private String uid;
	private String name;
	private String nickName;
	private String phone;
	private String sex;
	private String password;
	private String role;
	private Date createDate;
	private Date updateDate;
	private String state;
	private String imageUrl;
	private String customerState;
	private Set<BonusCard> bonusCards = null;
	private Set<Comment> comments = null;
	private Set<RewardAccount> rewardAccounts = new HashSet<RewardAccount>(0);
	private Set<PromotionCustomerRelation> promotionCustomerRelations = new HashSet<PromotionCustomerRelation>(
			0);
	private Set<CustomerCollectGoods> customerCollectGoodses = new HashSet<CustomerCollectGoods>(
			0);
	private Set<PropertyRequest> propertyRequests = new HashSet<PropertyRequest>(
			0);
	private Set<PropertyFee> propertyFees = new HashSet<PropertyFee>(0);
	private Set<OrderInfo> orderInfos = new HashSet<OrderInfo>(0);
	private Set<HouseMessage> houseMessages = new HashSet<HouseMessage>(0);
	private Set<Feedback> feedbacks = new HashSet<Feedback>(0);
	private Set<FeePaymentRequest> feePaymentRequests = new HashSet<FeePaymentRequest>(
			0);
	private Set<Complaint> complaints = new HashSet<Complaint>(0);

	public Customer() {
	}

	public Customer(String uid, String phone, String password) {
		this.uid = uid;
		this.phone = phone;
		this.password = password;
	}

	public Customer(CustomerLevel customerLevel, LivingArea livingArea,
			String uid, String name, String nickName, String phone, String sex,
			String password, String role, Date createDate, Date updateDate,
			String state, String imageUrl, String customerState,
			Set<BonusCard> bonusCards, Set<Comment> comments,
			Set<RewardAccount> rewardAccounts,
			Set<PromotionCustomerRelation> promotionCustomerRelations,
			Set<CustomerCollectGoods> customerCollectGoodses,
			Set<PropertyRequest> propertyRequests,
			Set<PropertyFee> propertyFees, Set<OrderInfo> orderInfos,
			Set<HouseMessage> houseMessages, Set<Feedback> feedbacks,
			Set<FeePaymentRequest> feePaymentRequests, Set<Complaint> complaints) {
		this.customerLevel = customerLevel;
		this.livingArea = livingArea;
		this.uid = uid;
		this.name = name;
		this.nickName = nickName;
		this.phone = phone;
		this.sex = sex;
		this.password = password;
		this.role = role;
		this.createDate = createDate;
		this.updateDate = updateDate;
		this.state = state;
		this.imageUrl = imageUrl;
		this.customerState = customerState;
		this.bonusCards = bonusCards;
		this.comments = comments;
		this.rewardAccounts = rewardAccounts;
		this.promotionCustomerRelations = promotionCustomerRelations;
		this.customerCollectGoodses = customerCollectGoodses;
		this.propertyRequests = propertyRequests;
		this.propertyFees = propertyFees;
		this.orderInfos = orderInfos;
		this.houseMessages = houseMessages;
		this.feedbacks = feedbacks;
		this.feePaymentRequests = feePaymentRequests;
		this.complaints = complaints;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customer_level_id")
	public CustomerLevel getCustomerLevel() {
		return this.customerLevel;
	}

	public void setCustomerLevel(CustomerLevel customerLevel) {
		this.customerLevel = customerLevel;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "living_area_id")
	public LivingArea getLivingArea() {
		return this.livingArea;
	}

	public void setLivingArea(LivingArea livingArea) {
		this.livingArea = livingArea;
	}

	@Column(name = "uid", nullable = false, length = 45)
	public String getUid() {
		return this.uid;
	}

	public void setUid(String uid) {
		this.uid = uid;
	}

	@Column(name = "name", length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "nick_name", length = 200)
	public String getNickName() {
		return this.nickName;
	}

	public void setNickName(String nickName) {
		this.nickName = nickName;
	}

	@Column(name = "phone", nullable = false, length = 13)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "sex", length = 2)
	public String getSex() {
		return this.sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}

	@Column(name = "password", nullable = false, length = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "role", length = 45)
	public String getRole() {
		return this.role;
	}

	public void setRole(String role) {
		this.role = role;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", length = 19)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	@Column(name = "state", length = 45)
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@Column(name = "image_url")
	public String getImageUrl() {
		return this.imageUrl;
	}

	public void setImageUrl(String imageUrl) {
		this.imageUrl = imageUrl;
	}

	@Column(name = "customer_state", length = 45)
	public String getCustomerState() {
		return this.customerState;
	}

	public void setCustomerState(String customerState) {
		this.customerState = customerState;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<BonusCard> getBonusCards() {
		return this.bonusCards;
	}

	public void setBonusCards(Set<BonusCard> bonusCards) {
		this.bonusCards = bonusCards;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<RewardAccount> getRewardAccounts() {
		return this.rewardAccounts;
	}

	public void setRewardAccounts(Set<RewardAccount> rewardAccounts) {
		this.rewardAccounts = rewardAccounts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<PromotionCustomerRelation> getPromotionCustomerRelations() {
		return this.promotionCustomerRelations;
	}

	public void setPromotionCustomerRelations(
			Set<PromotionCustomerRelation> promotionCustomerRelations) {
		this.promotionCustomerRelations = promotionCustomerRelations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<CustomerCollectGoods> getCustomerCollectGoodses() {
		return this.customerCollectGoodses;
	}

	public void setCustomerCollectGoodses(
			Set<CustomerCollectGoods> customerCollectGoodses) {
		this.customerCollectGoodses = customerCollectGoodses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<PropertyRequest> getPropertyRequests() {
		return this.propertyRequests;
	}

	public void setPropertyRequests(Set<PropertyRequest> propertyRequests) {
		this.propertyRequests = propertyRequests;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<PropertyFee> getPropertyFees() {
		return this.propertyFees;
	}

	public void setPropertyFees(Set<PropertyFee> propertyFees) {
		this.propertyFees = propertyFees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<OrderInfo> getOrderInfos() {
		return this.orderInfos;
	}

	public void setOrderInfos(Set<OrderInfo> orderInfos) {
		this.orderInfos = orderInfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<HouseMessage> getHouseMessages() {
		return this.houseMessages;
	}

	public void setHouseMessages(Set<HouseMessage> houseMessages) {
		this.houseMessages = houseMessages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Feedback> getFeedbacks() {
		return this.feedbacks;
	}

	public void setFeedbacks(Set<Feedback> feedbacks) {
		this.feedbacks = feedbacks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<FeePaymentRequest> getFeePaymentRequests() {
		return this.feePaymentRequests;
	}

	public void setFeePaymentRequests(Set<FeePaymentRequest> feePaymentRequests) {
		this.feePaymentRequests = feePaymentRequests;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Complaint> getComplaints() {
		return this.complaints;
	}

	public void setComplaints(Set<Complaint> complaints) {
		this.complaints = complaints;
	}

}
