package wuyi.model.po;

// Generated May 5, 2015 9:16:55 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PropertyRequest generated by hbm2java
 */
@Entity
@Table(name = "property_request", catalog = "wuyitech")
public class PropertyRequest implements java.io.Serializable {

	private Long id;
	private Customer customer;
	private HouseMessage houseMessage;
	private String name;
	private String type;
	private String description;
	private Date createDate;
	private String state;
	private String processState;
	private Set<Comment> comments = new HashSet<Comment>(0);
	private Set<PropertyRequestHistory> propertyRequestHistories = new HashSet<PropertyRequestHistory>(
			0);

	public PropertyRequest() {
	}

	public PropertyRequest(Customer customer, HouseMessage houseMessage,
			String name, String type, String description, Date createDate,
			String state, String processState, Set<Comment> comments,
			Set<PropertyRequestHistory> propertyRequestHistories) {
		this.customer = customer;
		this.houseMessage = houseMessage;
		this.name = name;
		this.type = type;
		this.description = description;
		this.createDate = createDate;
		this.state = state;
		this.processState = processState;
		this.comments = comments;
		this.propertyRequestHistories = propertyRequestHistories;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customer_id")
	public Customer getCustomer() {
		return this.customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "house_message_id")
	public HouseMessage getHouseMessage() {
		return this.houseMessage;
	}

	public void setHouseMessage(HouseMessage houseMessage) {
		this.houseMessage = houseMessage;
	}

	@Column(name = "name", length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "type", length = 45)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "description", length = 5000)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Column(name = "state", length = 45)
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@Column(name = "process_state", length = 45)
	public String getProcessState() {
		return this.processState;
	}

	public void setProcessState(String processState) {
		this.processState = processState;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "propertyRequest")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "propertyRequest")
	public Set<PropertyRequestHistory> getPropertyRequestHistories() {
		return this.propertyRequestHistories;
	}

	public void setPropertyRequestHistories(
			Set<PropertyRequestHistory> propertyRequestHistories) {
		this.propertyRequestHistories = propertyRequestHistories;
	}

}
